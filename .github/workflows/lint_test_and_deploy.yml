name: ðŸ’„ Lint, âœ… Test and ðŸš€ Deploy

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on: [push, pull_request]


jobs:
  lint:
    name: ðŸ’„ Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: "8.6.*"

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: 'pnpm'

      - name: ðŸ“¦ Install dependencies
        run: pnpm install

      - name: ðŸ’„ Lint the code
        run: pnpm lint

  test:
    name: âœ… Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: "8.6.*"

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: 'pnpm'

      - name: ðŸŽ­ Cache Playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: ðŸ“¦ Install dependencies
        run: pnpm install

      - name: ðŸŽ­ Install Playwright dependencies
        run: npx playwright install --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      - name: ðŸŽ­ Install Playwright dependencies from cache 
        run: npx playwright install-deps
        if: steps.playwright-cache.outputs.cache-hit == 'true'

      - name: âœ… Run unit tests
        run: pnpm tests:unit

      - name: âœ… Run e2e tests
        run: pnpm tests:e2e

  deploy:
    name: ðŸš€ Deploy
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: "8.6.*"

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: 'pnpm'

      - name: Install Vercel CLI
        run: pnpm install --global vercel@latest
      
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      
      - name: ðŸš€ Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
